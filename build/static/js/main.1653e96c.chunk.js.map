{"version":3,"sources":["context/UserContext.js","components/auth/AuthOptions.js","components/layout/Header.js","components/pages/TicketsList.js","components/pages/CreateTicket.js","components/pages/EditTicket.js","components/auth/Login.js","components/auth/Register.js","App.js","serviceWorker.js","index.js"],"names":["createContext","AuthOptions","useContext","UserContext","userData","setUserData","history","useHistory","className","user","onClick","token","undefined","localStorage","setItem","push","Header","id","to","Ticket","props","ticket","category","priority","subject","description","date","substring","_id","href","deleteTicket","TicketsList","bind","state","tickets","axios","get","then","response","setState","data","catch","error","console","log","delete","res","this","filter","el","map","selectedticket","key","ticketList","Component","CreateTicket","onChangeCategory","onChangePriority","onChangeSubject","onChangeDescription","onChangeDate","onSubmit","displayName","Date","categoryList","priorityList","e","target","value","preventDefault","post","window","location","ref","required","onChange","type","selected","EditTicket","match","params","Login","useState","email","setEmail","password","setPassword","submit","a","loginUser","Axios","loginResponse","htmlFor","Register","passwordCheck","setPasswordCheck","setDisplayName","newUser","placeholder","App","useEffect","getItem","headers","userResponse","checkLoggedIn","Provider","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1653e96c.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport default createContext(null);","import React, { useContext } from 'react';\nimport UserContext from \"../../context/UserContext\";\n\n// useHistory allows you to create your own links and change the url which updates the latest history\nimport { useHistory } from 'react-router-dom';\n\n// Create \"login\", \"logout\", and \"register\" buttons\n\nexport default function AuthOptions() {\n    const { userData, setUserData } = useContext(UserContext);\n\n    const history = useHistory();\n\n    const register = () => history.push(\"/register\");\n    const login = () => history.push(\"/login\");\n    const ticketsList = () => history.push(\"/\");\n    const createTicket = () => history.push(\"/create\");\n\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined\n        });\n        localStorage.setItem(\"auth-token\", \"\")\n    }\n\n    return (\n        <nav className=\"auth-options\">\n            {userData.user ? (\n                <>\n                {/* <button onClick={ticketsList}>My Tickets</button>\n                    <button onClick={createTicket}>Create a New Ticket</button> */}\n                    <button onClick={logout}>Logout</button>\n                </>\n                \n\n            ) \n            \n                : (\n                <>\n                    <button onClick={ticketsList}>My Tickets</button>\n                    <button onClick={createTicket}>Create a New Ticket</button>\n\n                    {/* <button onClick={register}>Register</button>\n                    <button onClick={login}>Login</button> */}\n                </>\n            )}\n        </nav>\n    );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthOptions from '../auth/AuthOptions';\n\nexport default function Header() {\n    return (\n        <div>\n            <header id=\"header\">\n            <Link to =\"/\">\n                <button className=\"title\">Ticket Tracker App</button>\n            </Link>\n            <AuthOptions />\n            </header>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Ticket = props => (\n    <tr>\n        <td>{props.ticket.category}</td>\n        <td>{props.ticket.priority}</td>\n        <td>{props.ticket.subject}</td>\n        <td>{props.ticket.description}</td>\n        <td>{props.ticket.date.substring(0,10)}</td>\n        <td>\n            <Link to={\"/edit/\"+props.ticket._id}>Edit</Link> | <a href=\"#\" onClick={() => { props.deleteTicket(props.ticket._id) }}>Delete</a>\n        </td>\n    </tr>\n)\n\nexport default class TicketsList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.deleteTicket = this.deleteTicket.bind(this);\n\n        this.state = {tickets: []}\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:5000/tickets/')\n            .then(response => {\n                this.setState({ tickets: response.data })\n            })\n            .catch((error) => {\n                console.log(error); \n            })\n    }\n\n    deleteTicket(id) {\n        axios.delete('http://localhost:5000/tickets/'+id)\n            .then(res => console.log(res.data));\n        this.setState({\n            tickets: this.state.tickets.filter(el => el._id !== id)\n        })\n    }\n\n    ticketList() {\n        return this.state.tickets.map(selectedticket => {\n            return <Ticket ticket={selectedticket} deleteTicket={this.deleteTicket} key={selectedticket._id} />;\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>My Tickets</h3>\n                <table className=\"table\">\n                    <thead className=\"thead-light\">\n                        <tr>\n                            <th>Category</th>\n                            <th>Priority</th>\n                            <th>Subject</th>\n                            <th>Description</th>\n                            <th>Date</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.ticketList() }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class CreateTicket extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeCategory = this.onChangeCategory.bind(this);\n        this.onChangePriority = this.onChangePriority.bind(this);\n        this.onChangeSubject = this.onChangeSubject.bind(this);\n        this.onChangeDescription = this.onChangeDescription.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            displayName: \"\",\n            category: \"\",\n            priority: \"\",\n            subject: \"\",\n            description: \"\",\n            date: new Date(),\n            categoryList: [],\n            priorityList: []\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            categoryList: ['General', 'Billing', 'Login', 'Abuse', 'Website'],\n            category: 'General',\n            priorityList: ['Low', 'Medium', 'High'],\n            priority: 'Low'\n        });\n    }\n\n    onChangeCategory(e) {\n        this.setState({\n            category: e.target.value\n        });\n    }\n\n    onChangePriority(e) {\n        this.setState({\n            priority: e.target.value\n        });\n    }\n\n    onChangeSubject(e) {\n        this.setState({\n            subject: e.target.value\n        });\n    }\n\n    onChangeDescription(e) {\n        this.setState({\n            description: e.target.value\n        });\n    }\n\n    onChangeDate(date) {\n        this.setState({\n            date: date\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const ticket = {\n            displayName: this.state.displayName,\n            category: this.state.category,\n            priority: this.state.priority,\n            subject: this.state.subject,\n            description: this.state.description,\n            date: this.state.date\n        }\n\n        console.log(ticket);\n\n        axios.post('http://localhost:5000/tickets/add', ticket)\n            .then(res => console.log(res.data));\n\n        window.location = \"/\";\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Create a New Ticket</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Category: </label>\n                        <select ref=\"categoryInput\"\n                            required\n                            className=\"form-control\"\n                            value={this.state.category}\n                            onChange={this.onChangeCategory}>\n                                {\n                                this.state.categoryList.map(function(category) {\n                                    return <option\n                                            key={category}\n                                            value={category}>{category}\n                                        </option>;\n                                    })\n                                }\n                            </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Priority: </label>\n                        <select ref=\"categoryInput\"\n                            required\n                            className=\"form-control\"\n                            value={this.state.priority}\n                            onChange={this.onChangePriority}>\n                                {\n                                this.state.priorityList.map(function(priority) {\n                                    return <option\n                                            key={priority}\n                                            value={priority}>{priority}\n                                        </option>;\n                                    })\n                                }\n                            </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Subject: </label>\n                        <input type=\"text\"\n                            required\n                            className=\"form-control\"\n                            value={this.state.subject}\n                            onChange={this.onChangeSubject}\n                            />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Description: </label>\n                        <input type=\"text\"\n                            required\n                            className=\"form-control\"\n                            value={this.state.description}\n                            onChange={this.onChangeDescription}\n                            />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Date: </label>\n                        <div>\n                            <DatePicker\n                                selected={this.state.date}\n                                onChange={this.onChangeDate}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Create Ticket\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport axios from 'axios';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class EditTicket extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeCategory = this.onChangeCategory.bind(this);\n        this.onChangePriority = this.onChangePriority.bind(this);\n        this.onChangeSubject = this.onChangeSubject.bind(this);\n        this.onChangeDescription = this.onChangeDescription.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            displayName: \"\",\n            category: \"\",\n            priority: \"\",\n            subject: \"\",\n            description: \"\",\n            date: new Date(),\n            categoryList: [],\n            priorityList: []\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:5000/tickets/'+this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    category: response.data.category,\n                    priority: response.data.priority,\n                    subject: response.data.subject,\n                    description: response.data.description,\n                    date: new Date(response.data.date)\n                })\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n\n        this.setState({\n            categoryList: ['General', 'Billing', 'Login', 'Abuse', 'Website'],\n            category: 'General',\n            priorityList: ['Low', 'Medium', 'High'],\n            priority: 'Low'\n        });\n    }\n\n    onChangeCategory(e) {\n        this.setState({\n            category: e.target.value\n        });\n    }\n\n    onChangePriority(e) {\n        this.setState({\n            priority: e.target.value\n        });\n    }\n\n    onChangeSubject(e) {\n        this.setState({\n            subject: e.target.value\n        });\n    }\n\n    onChangeDescription(e) {\n        this.setState({\n            description: e.target.value\n        });\n    }\n\n    onChangeDate(date) {\n        this.setState({\n            date: date\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const ticket = {\n            displayName: this.state.displayName,\n            category: this.state.category,\n            priority: this.state.priority,\n            subject: this.state.subject,\n            description: this.state.description,\n            date: this.state.date\n        }\n\n        console.log(ticket);\n\n        axios.post('http://localhost:5000/tickets/update/' + this.props.match.params.id, ticket)\n            .then(res => console.log(res.data));\n\n        window.location = \"/\";\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Edit Ticket</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Category: </label>\n                        <select ref=\"categoryInput\"\n                            required\n                            className=\"form-control\"\n                            value={this.state.category}\n                            onChange={this.onChangeCategory}>\n                                {\n                                this.state.categoryList.map(function(category) {\n                                    return <option\n                                            key={category}\n                                            value={category}>{category}\n                                        </option>;\n                                    })\n                                }\n                            </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Priority: </label>\n                        <select ref=\"categoryInput\"\n                            required\n                            className=\"form-control\"\n                            value={this.state.priority}\n                            onChange={this.onChangePriority}>\n                                {\n                                this.state.priorityList.map(function(priority) {\n                                    return <option\n                                            key={priority}\n                                            value={priority}>{priority}\n                                        </option>;\n                                    })\n                                }\n                            </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Subject: </label>\n                        <input type=\"text\"\n                            required\n                            className=\"form-control\"\n                            value={this.state.subject}\n                            onChange={this.onChangeSubject}\n                            />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Description: </label>\n                        <input type=\"text\"\n                            required\n                            className=\"form-control\"\n                            value={this.state.description}\n                            onChange={this.onChangeDescription}\n                            />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Date: </label>\n                        <div>\n                            <DatePicker\n                                selected={this.state.date}\n                                onChange={this.onChangeDate}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Edit Ticket\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, { useState, useContext } from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from 'axios';\n\nexport default function Login() {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n\n\n    const { setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const submit = async (e) => {\n        e.preventDefault();\n        const loginUser = { email, password };\n        const loginResponse = await Axios.post(\"http://localhost:5000/users/login\", loginUser);\n        \n        setUserData({\n            token: loginResponse.data.token,\n            user: loginResponse.data.user,\n        });\n        localStorage.setItem(\"auth-token\", loginResponse.data.token)\n        history.push(\"/\")\n    }; \n\n    return (\n        <div className=\"page\">\n            <h2>Login</h2>\n            <form className=\"form\" onSubmit={submit}>\n                <label htmlFor=\"login-email\">Email</label>\n                <input id=\"login-email\" type=\"email\" onChange={(e) => setEmail(e.target.value)}/>\n\n                <label htmlFor=\"login-password\">Password</label>\n                <input id=\"login-password\" type=\"password\" onChange={(e) => setPassword(e.target.value)}/>\n                \n                <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\n            </form>\n        </div>\n    )\n}\n","import React, { useState, useContext } from 'react';\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from 'axios';\n\nexport default function Register() {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [passwordCheck, setPasswordCheck] = useState();\n    const [displayName, setDisplayName] = useState();\n\n    const { setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const submit = async (e) => {\n        e.preventDefault();\n        const newUser = { email, password, passwordCheck, displayName };\n        await Axios.post(\"http://localhost:5000/users/register\", newUser);\n        const loginResponse = await Axios.post(\"http://localhost:5000/users/login\", { email, password });\n        \n        setUserData({\n            token: loginResponse.data.token,\n            user: loginResponse.data.user,\n        });\n        localStorage.setItem(\"auth-token\", loginResponse.data.token)\n        history.push(\"/\")\n    }; \n\n    return (\n        <div className=\"page\">\n            <h2>Register</h2>\n            <form className=\"form\" onSubmit={submit}>\n                <label htmlFor=\"register-email\">Email</label>\n                <input id=\"register-email\" type=\"email\" onChange={(e) => setEmail(e.target.value)}/>\n\n                <label htmlFor=\"register-password\">Password</label>\n                <input id=\"register-password\" type=\"password\" onChange={(e) => setPassword(e.target.value)}/>\n                <input type=\"password\" placeholder=\"Re-enter password\" onChange={(e) => setPasswordCheck(e.target.value)}/>\n\n                <label htmlFor=\"register-displayName\">Display Name</label>\n                <input id=\"register-displayName\" type=\"text\" onChange={(e) => setDisplayName(e.target.value)}/>\n\n                <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" />\n            </form>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Axios from 'axios';\nimport Header from './components/layout/Header';\nimport TicketsList from './components/pages/TicketsList';\nimport CreateTicket from \"./components/pages/CreateTicket\";\nimport EditTicket from \"./components/pages/EditTicket\";\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport UserContext from './context/UserContext';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./style.css\";\n\nexport default function App() {\n    const [userData, setUserData] = useState({\n        token: undefined,\n        user: undefined,\n    })\n\n    useEffect(() => {\n        const checkLoggedIn = async () => { \n        let token = localStorage.getItem(\"auth-token\");\n        if (token === null) {\n            localStorage.setItem(\"auth-token\", \"\");\n            token = \"\";\n        }\n        const tokenResponse = await Axios.post(\n            \"http://localhost:5000/users/tokenIsValid\",\n            null,\n            { headers: { \"x-auth-token\": token } }\n        );\n        if (tokenResponse.data) {\n            const userResponse = await Axios.get(\"http://localhost:5000/users/\",  { headers: { \"x-auth-token\": token } },\n            );\n            setUserData({\n            token,\n            user: userResponse.data,\n            });\n        }\n    };\n\n    checkLoggedIn();\n}, []);\n\n    return (\n        <>\n            <BrowserRouter>\n            <UserContext.Provider value={{ userData, setUserData }}>\n                <Header />\n                <div className=\"container\">\n                <Switch>\n                    <Route exact path=\"/\" component={TicketsList} />\n                    <Route path=\"/create\" component={CreateTicket} />\n                    <Route path=\"/edit/:id\" component={EditTicket} />\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/register\" component={Register} />\n                </Switch>\n                </div>\n            </UserContext.Provider>\n            </BrowserRouter>\n        </>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}